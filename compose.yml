version: "3.8"

services:
  api:
    container_name: api-container
    env_file:
      - ./go-ec-rest-api/.env
    build:
      context: ./go-ec-rest-api/
      dockerfile: Dockerfile
    volumes:
      - ./go-ec-rest-api:/app
    ports:
      - 9090:9090
    tty: true
    stdin_open: true
    depends_on:
      - db

  owner:
    container_name: owner-container
    # env_file:
    #   - ./owner-front/.env
    build:
      context: ./owner-front/
      dockerfile: Dockerfile
    volumes:
      - ./owner-front:/app
      # - public:/app/public
      - owner-node_modules:/app/node_modules
    ports:
      - 4000:3000
    tty: true
    stdin_open: true
    depends_on:
      - api

  user:
    container_name: user-container
    # env_file:
    #   - ./user-front/.env
    build:
      context: ./user-front/
      dockerfile: Dockerfile
    volumes:
      - ./user-front:/app
      # - public:/app/public
      - user-node_modules:/app/node_modules
    ports:
      - 4001:3000
    tty: true
    stdin_open: true
    depends_on:
      - api

  db:
    image: postgres:15.1-alpine
    container_name: db-container
    ports:
      - 5434:5432
    env_file:
      - ./go-ec-rest-api/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data

  pgadmin4:
    image: dpage/pgadmin4:7.0
    ports:
      - "8080:80"
    env_file:
      - ./go-ec-rest-api/.env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - db
    restart: always
    volumes:
      - pgadmin4-data:/var/lib/pgadmin

volumes:
  owner-node_modules:
  user-node_modules:
  db-data:
  pgadmin4-data:
